/* Generated by Yosys 0.27+22 (git sha1 53c0a6b78, clang 10.0.0-4ubuntu1 -fPIC -Os) */

module ser(data, load_en, shift_en, rst, clk, stream);
  wire [7:0] _0_;
  wire [7:0] _1_;
  wire [7:0] _2_;
  reg [7:0] _3_;
  input clk;
  wire clk;
  input [7:0] data;
  wire [7:0] data;
  input load_en;
  wire load_en;
  wire [7:0] reg_d;
  wire [7:0] reg_q;
  input rst;
  wire rst;
  input shift_en;
  wire shift_en;
  output stream;
  wire stream;
  assign _1_ = shift_en ? { reg_q[6:0], 1'h0 } : reg_q;
  assign _2_ = load_en ? data : _1_;
  always @(posedge clk)
    _3_ <= _0_;
  assign _0_ = rst ? 8'h00 : reg_d;
  assign reg_d = _2_;
  assign reg_q = _3_;
  assign stream = reg_q[7];
endmodule
