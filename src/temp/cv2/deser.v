/* Generated by Yosys 0.27+22 (git sha1 53c0a6b78, clang 10.0.0-4ubuntu1 -fPIC -Os) */

module deser(shift_en, rst, clk, stream, data);
  wire [7:0] _0_;
  wire [7:0] _1_;
  reg [7:0] _2_;
  input clk;
  wire clk;
  output [7:0] data;
  wire [7:0] data;
  wire [7:0] reg_d;
  wire [7:0] reg_q;
  input rst;
  wire rst;
  input shift_en;
  wire shift_en;
  input stream;
  wire stream;
  assign _1_ = shift_en ? { reg_q[6:0], stream } : reg_q;
  always @(posedge clk)
    _2_ <= _0_;
  assign _0_ = rst ? 8'h00 : reg_d;
  assign reg_d = _1_;
  assign reg_q = _2_;
  assign data = { reg_q[0], reg_q[1], reg_q[2], reg_q[3], reg_q[4], reg_q[5], reg_q[6], reg_q[7] };
endmodule
